package net.skinner.scraper;

import java.io.IOException;

import org.jsoup.Connection;
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;

public class ScheduleScraper {
	public static void main(String[] args) {
		ScheduleScraper.run();
	}
	
	private static void run() {
		String baseURL = "http://www.mlssoccer.com/schedule";
		for (int month = 3; month <= 12; month++) {
			Connection conn = Jsoup.connect(baseURL + "?month=" + month);
			
			Document scheduleDoc = null;
			int retries = 0;
			while(scheduleDoc == null){
				try {
					scheduleDoc = conn.get();
				} catch (IOException e) {
					if(retries >= 10){
						e.printStackTrace();
						return;
					}
					System.out.println("Failed to get document, trying again");
					retries++;
				}
			}
			
			Elements scheduleSection = scheduleDoc.select("div.schedule-page");
			Elements dates = scheduleSection.select("h3");
			Elements scheduleTables = scheduleSection.select("table");
			
			for (int i = 0; i < scheduleTables.size(); i++) {
				Elements gameRows = scheduleTables.get(i).select("tbody").select("tr");
				for (Element gameRow : gameRows) {
					String time = gameRow.select("div.field-game-date-start-time").text();
					String competition = gameRow.select("span.competetion").text();
					String stadium = gameRow.select("div.field-competition-venue").text().replace(competition, "").replace("at ", "").trim();
					String homeTeam = gameRow.select("div.field-home-team").text();
					String awayTeam = gameRow.select("div.field-away-team").text();
					String score = gameRow.select("div.views-field score").text().replace(" ", "");
					String[] scoreSplit = score.split("-");
					Integer homeScore = null;
					Integer awayScore = null;
					try{
						homeScore = Integer.parseInt(scoreSplit[0]);
						awayScore = Integer.parseInt(scoreSplit[1]);
					} catch(Exception e) {
						
					}
				}
			}
				
		}
	}
}
